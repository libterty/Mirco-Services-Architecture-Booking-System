version: "3"

services:
  books:
    image: libterty8186/bookservice:latest
    build:
      context: ./books
      dockerfile: dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    ports:
      - "4545:4545"
    depends_on:
      - redis
      - rabbitmq
      - postgres

  orders:
    image: libterty8186/orderservice:latest
    build:
      context: ./orders
      dockerfile: dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    ports:
      - "4546:4546"
    depends_on:
      - redis
      - rabbitmq
      - postgres

  customers:
    image: libterty8186/customerservice:latest
    build:
      context: ./customers
      dockerfile: dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    ports:
      - "4547:4547"
    depends_on:
      - redis
      - rabbitmq
      - postgres

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    image: "bitnami/redis:latest"
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      kompose.service.type: nodeport
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/bitnami/redis"

  postgres:
    restart: always
    image: postgres:9.6.2
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_MULTIPLE_DATABASES="bookservice, customerservice, orderservice"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ../docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
      - ./pgdata:/var/lib/postgresql/data

volumes:
  redis_data:
    driver: local
